import java.util.Arrays;

public class HeapSort {
    public static void buildHeap(int [] array){
        int size = array.length -1;
        for(int i = size /2  ; i >=0 ; i--){
            heapify(array , i , size);
        }
    }
    public static void heapify(int [] array , int rootElementIndex , int size){
        int left = 2 *rootElementIndex +1;
        int right = 2 * rootElementIndex +2;
        int max ;
        if (left <= size && array[left] > array[rootElementIndex]){
            max =left;
        }else {
            max = rootElementIndex;
        }
        if(right <= size && array[right] > array[max]){
            max = right;
        }
        if(max != rootElementIndex){
            swap(array , rootElementIndex ,max);
            heapify(array , max , size);
        }
    }
    public static void swap(int [] array , int i , int j){
        int temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
    public static int [] sort(int [] array){
            buildHeap(array);
            int sizeOfHeap = array.length -1;
            for(int i = sizeOfHeap ; i >0 ; i--){
                    swap(array , 0 ,i );
                    sizeOfHeap =sizeOfHeap - 1;
                    heapify(array , 0 , sizeOfHeap);
            }
            return array;
    }

    public static void main(String[] args) {
        int[] arr={1,10,16,19,3,5};
        arr = sort(arr);
        System.out.println(Arrays.toString(arr));
    }
}